node{

def mavenHome = tool name: "maven3.8.5"

//properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])

try {
sendslacknotification("STARTED")

stage  ('check out') {
git credentialsId: 'ca07b5e4-1edf-4cdb-b679-313faaa79542', url: 'https://github.com/rsp-banking-sector/maven-web-application.git'
}

stage ('build'){
sh "${mavenHome}/bin/mvn clean package"
}
/*
stage ('sonar report'){
    sh "${mavenHome}/bin/mvn sonar:sonar"
}

stage ('store data in nexus'){
    sh "${mavenHome}/bin/mvn deploy"
}

stage ('deploy app into the tomcat'){
 sshagent(['702b7b2e-337d-4714-839c-d95c32b127ef']) {
 sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.7.103:/opt/apache-tomcat-9.0.68/webapps/"
}
}
*/
}//try closing

catch (e) {
    // If there was an exception thrown, the build failed
    currentBuild.result = "FAILED"
    }// catch closing
  finally {
    // Success or failure, always send notifications
   sendslacknotification(currentBuild.result)
  }// finally closing 

}// node closing

def sendslacknotification(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorname = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    colorname = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorname = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary,)
}
